// Code generated by mockery v1.0.0. DO NOT EDIT.
package mocks

import context "context"
import inventar "github.com/West-Labs/inventar"
import mock "github.com/stretchr/testify/mock"

// UserService is an autogenerated mock type for the UserService type
type UserService struct {
	mock.Mock
}

// Signin provides a mock function with given fields: ctx, credential
func (_m *UserService) Signin(ctx context.Context, credential *inventar.Credential) (bool, error) {
	ret := _m.Called(ctx, credential)

	var r0 bool
	if rf, ok := ret.Get(0).(func(context.Context, *inventar.Credential) bool); ok {
		r0 = rf(ctx, credential)
	} else {
		r0 = ret.Get(0).(bool)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *inventar.Credential) error); ok {
		r1 = rf(ctx, credential)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Signup provides a mock function with given fields: ctx, credential
func (_m *UserService) Signup(ctx context.Context, credential *inventar.Credential) (bool, error) {
	ret := _m.Called(ctx, credential)

	var r0 bool
	if rf, ok := ret.Get(0).(func(context.Context, *inventar.Credential) bool); ok {
		r0 = rf(ctx, credential)
	} else {
		r0 = ret.Get(0).(bool)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, *inventar.Credential) error); ok {
		r1 = rf(ctx, credential)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
